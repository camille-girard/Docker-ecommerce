version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      target: production-stage
    ports:
      - "8080:80"
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    depends_on:
      - auth-service
      - product-service
      - order-service

  auth-service:
    build:
      context: ./services/auth-service
    env_file:
      - .env.production
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  product-service:
    build:
      context: ./services/product-service
    env_file:
      - .env.production
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  order-service:
    build:
      context: ./services/order-service
    env_file:
      - .env.production
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:6
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - backend
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1.0"
          memory: "1G"

networks:
  backend:
    driver: overlay

volumes:
  mongodb_data:
    driver: local
